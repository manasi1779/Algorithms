import java.util.Scanner;

public class Partitions {
	
	static Scanner s = new Scanner(System.in);
	static int[] oddArray; 

	public static void main(String[] args) {
		int size = s.nextInt();
		s.nextLine();
		int[] intArray = new int[size];
		for(int i = 0; i < size; i++){
			intArray[i] = s.nextInt();
		}
		
	//	System.out.println(getEvenPartitions(intArray));
		System.out.println(getOddLinearPartitions(intArray));
	}

	private static int getOddLinearPartitions(int[] intArray) {
		int sum = 0;
		oddArray = new int[intArray.length+1];
		for(int i =1; i < intArray.length+1; i++){
			sum += intArray[i-1];
			if(sum%2 != 0){
				if(oddArray[i-1] == 0)
					oddArray[i] = 1;
				else
					oddArray[i] = oddArray[i-1]*2;	
			}			
			else{
				if(oddArray[i-1] == 0)
					oddArray[i] = 1;
				else
					oddArray[i] = oddArray[i-1]+1;
			}
		}
		return oddArray[intArray.length];
	}

	/*
	 * Greedy O(n)
	 */
	private static int getEvenPartitions(int[] intArray) {
		int count =0, sum = 0;
		for(int i =0; i < intArray.length; i++){
			sum+=intArray[i];
			if(sum%2==0){
				if(count==0)
					count = 1;
				else
				count*=2;
			}
		}		
		return count;
	}
	
	
	

}
